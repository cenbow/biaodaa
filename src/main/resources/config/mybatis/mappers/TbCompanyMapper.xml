<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silita.biaodaa.dao.TbCompanyMapper" >

  <!-- 查询企业列表 -->
  <select id="queryCompanyList" resultType="com.silita.biaodaa.model.TbCompany" parameterType="String">
    select c.*,s.cert_no,s.cert_date,s.valid_date,b.runScope as comRange,b.registerStatus as subsist from tb_company c
    left join tb_safety_certificate s on c.com_name = s.com_name
    left join mishu_next.cert_basic b on b.registerNo = c.org_code and b.companyName = c.com_name
    where 1=1
    and c.com_name like CONCAT('%',#{keyWord},'%')
  </select>

  <select id="getCompany" resultType="com.silita.biaodaa.model.TbCompany" parameterType="Integer">
    select c.*,s.cert_no,s.cert_date,s.valid_date,b.runScope as comRange,b.registerStatus as subsist from tb_company c
    left join tb_safety_certificate s on c.com_name = s.com_name
    left join mishu_next.cert_basic b on b.registerNo = c.org_code and b.companyName = c.com_name
    where 1=1
    and c.com_id = #{comId}
    limit 1
  </select>

  <select id="filterCompany" resultType="com.silita.biaodaa.model.TbCompany" parameterType="Map">
    select c.*,s.cert_no,s.cert_date,s.valid_date,b.runScope as comRange,b.registerStatus as subsist
    from tb_company c
    left join tb_safety_certificate s on c.com_name = s.com_name
    left join mishu_next.cert_basic b on b.registerNo = c.org_code and b.companyName = c.com_name
    left join area a on a.name = c.regis_address
    where 1=1
    <if test="areaCode!=null and areaCode!=''">
      and a.code like CONCAT(#{areaCode},'%')
    </if>
    <if test="indestry!=null and indestry!=''">
      and b.runScope like CONCAT('%',#{indestry},'%')
    </if>
    <if test="minCapital!=null">
      <![CDATA[ and c.regis_capital >= #{minCapital} ]]>
    </if>
    <if test="maxCapital!=null">
      <![CDATA[ and c.regis_capital <= #{maxCapital} ]]>
    </if>
    <if test="qualCode!=null and qualCode!=''">
      and c.range like CONCAT('%',#{qualCode},'%')
    </if>
  </select>

  <select id="getAreaCode" parameterType="String" resultType="String">
    select code from area where `name`=#{name} or display_name=#{name}
  </select>

  <select id="queryProvinceList" resultType="Map">
    select id,display_name from area where grade=0 order by name_abbr
  </select>

  <select id="queryCityList" resultType="String" parameterType="String">
    select display_name from area where parent_id=#{parentId}  order by name_abbr
  </select>

  <select id="getCompanyOrgCode" parameterType="Integer" resultType="com.silita.biaodaa.model.TbCompany">
    select * from tb_company where com_id=#{comId} limit 1
  </select>

  <select id="getCertSrcUuid" parameterType="String" resultType="String">
    select uuid from cert_src where uuid is not null and companyCode=#{companyCode}
  </select>

  <select id="getCertAqrz" parameterType="Map" resultType="Map">
    select zh.mateName,zh.score from cert_aqrz a 
    left join prize_zh zh on a.zhUuid=zh.uuid 
    where a.zhUuid is not null and srcUuid in
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
    order by yxqTime desc limit 1;
  </select>
  
  <select id="getCertQyhj" parameterType="Map" resultType="Map">
    select q.projName,q.projType,q.years,zh.type,zh.code,zh.mateName,zh.score,zh.shortName
    from cert_qyhj q
    left join prize_zh zh on q.zhUuid=zh.uuid
    where q.zhUuid is not null
    and srcUuid in
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="getUndesirable" parameterType="Map" resultType="Map">
    select nature,publishDate,projectName,actionCode,validityDate,publishSite,badBehaviorContent
    from cert_undesirable
    where  srcUUid in
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

</mapper>